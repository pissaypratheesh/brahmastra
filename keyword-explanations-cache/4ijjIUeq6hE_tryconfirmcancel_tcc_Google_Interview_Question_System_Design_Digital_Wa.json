{
  "videoId": "4ijjIUeq6hE",
  "title": "Google Interview Question | System Design: Digital Wallet (3+ Approaches)",
  "keyword": "try-confirm-cancel (tc/c))",
  "explanation": "## try-confirm-cancel (tc/c)\n\nThe \"try-confirm-cancel\" (tc/c) pattern is a transaction management strategy used in distributed systems to ensure reliable execution of operations across multiple services. It involves three phases: the \"try\" phase where operations are attempted, the \"confirm\" phase where successful operations are finalized, and the \"cancel\" phase where operations can be rolled back in case of failure, thus maintaining consistency and integrity in the system.\n\n### How it applies in this context:\nIn the context of the digital wallet system discussed, the tc/c pattern is particularly relevant for managing the complexity of distributed transactions. When a user initiates a fund transfer, the system can utilize the try phase to deduct the amount from the sender's wallet, the confirm phase to finalize the transaction once the recipient's wallet is ready to accept the funds, and the cancel phase to revert any changes if the transaction fails at any point. This approach aligns with the Saga pattern mentioned in the video, enabling robust handling of financial transactions while ensuring eventual consistency.\n\n### Diagram:\n```mermaid\nsequenceDiagram\n    participant User\n    participant WalletService\n    participant TransactionService\n\n    User->>WalletService: Initiate Transfer\n    WalletService->>TransactionService: Try to Deduct Amount\n    TransactionService-->>WalletService: Amount Deducted\n    WalletService->>TransactionService: Confirm Transfer\n    TransactionService-->>WalletService: Transfer Confirmed\n    WalletService-->>User: Transfer Successful\n\n    alt Transfer Fails\n        TransactionService->>WalletService: Cancel Transfer\n        WalletService-->>TransactionService: Revert Deduction\n        TransactionService-->>User: Transfer Failed\n    end\n```\n\nThis diagram illustrates the interactions between the user, the wallet service, and the transaction service during the try-confirm-cancel process, highlighting the flow of operations and the rollback mechanism in case of failure.",
  "model": "gpt-4o-mini",
  "generatedAt": "2025-07-13T17:12:58.476Z",
  "lastEditedAt": "2025-07-13T17:15:59.547Z"
}